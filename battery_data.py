"""
Created on Mar 10 10:42:33 2023

@author: schneiderFTM
"""

# Initialization of all battery properties for NMC/LFP cell types

# Import libraries
import numpy as np
from scipy.interpolate import interp1d
from scipy.interpolate import interp2d


# Setting Battery Model Parameter for Model Type (1) Naumann et al.
def bat_nau_setting(cell):

    # Nominal cell capacity in Ah
    cell.Qnom = 3.0
    # Nominal cell voltage in V
    cell.Unom = 3.2
    # Minimal cell voltage in V
    cell.Umin = 2.0
    # Maximum cell voltage in V
    cell.Umax = 3.6
    # Maximum charging current in A
    cell.Imax_cont = 3
    # Maximum discharge current in C
    cell.Imin_cont = -20
    # Max and Min SOC state allowed
    cell.SOC_max = 0.97  # Upper SOC limit [ID3 Paper]
    cell.SOC_min = 0.041  # Lower SOC limit [ID3 Paper]
    #Cell Weight
    cell.mass = 0.0845 #kg
    # Heat Capacity Cell Forgez et al.
    cell.T_cap_cell = 76.27
    # Thermal resistance between cell and Housing
    cell.R_th_in = 3.3
    # Cell Start Temperature
    cell.start_temp = 25

    # Data for internal resistance case Charging
    R_i_ch_table = [[0.053553148, 0.037583674, 0.030476853, 0.030476853],
                    [0.053553148, 0.037583674, 0.030476853, 0.030476853],
                    [0.059217307, 0.041399276, 0.033085519, 0.033085519],
                    [0.058450526, 0.041399276, 0.033149145, 0.033149145],
                    [0.059280913, 0.041779084, 0.032640137, 0.032640137],
                    [0.062648279, 0.044767041, 0.035246691, 0.035246691],
                    [0.067545657, 0.047695018, 0.037666590, 0.03766659],
                    [0.070789375, 0.049790616, 0.038939110, 0.03893911],
                    [0.069199318, 0.046804711, 0.035566933, 0.035566933],
                    [0.080652573, 0.053421621, 0.039954732, 0.039954732],
                    [0.080652573, 0.053421621, 0.039954732, 0.039954732]]
    y_value = [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]
    x_value = [10, 25, 40, 60]
    # Interpolation of internal resistance for Charging
    cell.R_i_ch_func = interp2d(x_value, y_value, R_i_ch_table, kind="linear")
    # Data for internal resistance case discharging
    R_i_dch_table = [0.194952789, 0.061685557, 0.044090174, 0.044090174,
                     0.194952789, 0.061685557, 0.044090174, 0.044090174,
                     0.080774939, 0.050374992, 0.038430102, 0.038430102,
                     0.075055233, 0.048845551, 0.037541588, 0.037541588,
                     0.074809788, 0.051762822, 0.040018594, 0.040018594,
                     0.069390124, 0.047827935, 0.038375676, 0.038375676,
                     0.065120954, 0.044266280, 0.035121551, 0.035121551,
                     0.061503438, 0.041785842, 0.032894641, 0.032894641,
                     0.064822427, 0.046555916, 0.037723435, 0.037723435,
                     0.061432462, 0.042546505, 0.033978319, 0.033978319,
                     0.061432462, 0.042546505, 0.033978319, 0.033978319]
    # Interpolation internal resistance for discharging
    cell.R_i_dch_func = interp2d(x_value, y_value, R_i_dch_table, kind="linear")

    #Load Uocv data
    U_ocv_data = np.genfromtxt("inputs/Cells/CLFP_Sony_US26650_OCV.csv", delimiter=',')

    #Interpolate Uocv curve
    cell.ocv_func = interp1d(U_ocv_data[:, 0], U_ocv_data[:, 1], kind="linear")

    return cell


# Setting Battery Model type (2) Schmalstieg
def bat_ss_setting(cell):

    # Nominal cell capacity in Ah
    cell.Qnom = 2.05
    # Nominal cell voltage in V
    cell.Unom = 3.6
    # Minimal cell voltage in V
    cell.Umin = 3.0
    # Maximum cell voltage in V
    cell.Umax = 4.2
    # Maximum charging current in A
    cell.Imax_cont = 2.05
    # Maximum discharge current in C
    cell.Imin_cont = -6.15
    # Max and Min SOC state allowed
    cell.SOC_max = 0.97  # Upper SOC limit [ID3 Paper]
    cell.SOC_min = 0.041  # Lower SOC limit [ID3 Paper]
    # Heat Capacity Cell Forgez et al.
    cell.T_cap_cell = 76.27
    # Thermal resistance between cell and Housing
    cell.R_th_in = 3.3
    # Cell Start Temperature
    cell.start_temp = 25
    # Cell Mass
    cell.mass = 0.0445  # kg
    # Internal Resistance
    Ri_data = np.genfromtxt("inputs/Cells/NMC_Sanyo_Rint.csv", delimiter=',')
    R_i_ch_table = Ri_data[1:, 2:6]
    R_i_dch_table = Ri_data[1:, 6:10]
    x_value = [10, 25, 40, 60]
    y_value = np.arange(0, 1.01, 0.01)

    cell.R_i_dch_func = interp2d(x_value, y_value, R_i_dch_table, kind="linear")
    cell.R_i_ch_func = interp2d(x_value, y_value, R_i_ch_table, kind="linear")

    # Open Circuit Voltage
    points = [0, 0.00696136400000000, 0.0139227290000000, 0.0208840930000000, 0.0278454580000000, 0.0348068220000000,
              0.0417681870000000, 0.0487295510000000, 0.0556909150000000, 0.0626522800000000, 0.0696136440000000,
              0.0765750090000000, 0.0835363730000000, 0.0904977380000000, 0.0974591020000000, 0.104420466000000,
              0.111381831000000, 0.118343195000000, 0.125304560000000, 0.132265924000000, 0.139227289000000,
              0.146188653000000, 0.153150017000000, 0.160111382000000, 0.167072746000000, 0.174034111000000,
              0.180995475000000, 0.187956840000000, 0.194918204000000, 0.201879568000000, 0.208840933000000,
              0.215802297000000, 0.222763662000000, 0.229725026000000, 0.236686391000000, 0.243647755000000,
              0.250609119000000, 0.257570484000000, 0.264531848000000, 0.271493213000000, 0.278454577000000,
              0.285415942000000, 0.292377306000000, 0.299338670000000, 0.306300035000000, 0.313261399000000,
              0.320222764000000, 0.327184128000000, 0.334145493000000, 0.341106857000000, 0.348068221000000,
              0.355029586000000, 0.361990950000000, 0.368952315000000, 0.375913679000000, 0.382875044000000,
              0.389836408000000, 0.396797772000000, 0.403759137000000, 0.410720501000000, 0.417681866000000,
              0.424643230000000, 0.431604595000000, 0.438565959000000, 0.445527323000000, 0.452488688000000,
              0.459450052000000, 0.466411417000000, 0.473372781000000, 0.480334145000000, 0.487295510000000,
              0.494256874000000, 0.501218239000000, 0.508179603000000, 0.515140968000000, 0.522102332000000,
              0.529063696000000, 0.536025061000000, 0.542986425000000, 0.549947790000000, 0.556909154000000,
              0.563870519000000, 0.570831883000000, 0.577793247000000, 0.584754612000000, 0.591715976000000,
              0.598677341000000, 0.605638705000000, 0.612600070000000, 0.619561434000000, 0.626522798000000,
              0.633484163000000, 0.640445527000000, 0.647406892000000, 0.654368256000000, 0.661329621000000,
              0.668290985000000, 0.675252349000000, 0.682213714000000, 0.689175078000000, 0.696136443000000,
              0.703097807000000, 0.710059172000000, 0.717020536000000, 0.723981900000000, 0.730943265000000,
              0.737904629000000, 0.744865994000000, 0.751827358000000, 0.758788723000000, 0.765750087000000,
              0.772711451000000, 0.779672816000000, 0.786634180000000, 0.793595545000000, 0.800556909000000,
              0.807518274000000, 0.814479638000000, 0.821441002000000, 0.828402367000000, 0.835363731000000,
              0.842325096000000, 0.849286460000000, 0.856247825000000, 0.863209189000000, 0.870170553000000,
              0.877131918000000, 0.884093282000000, 0.891054647000000, 0.898016011000000, 0.904977376000000,
              0.911938740000000, 0.918900104000000, 0.925861469000000, 0.932822833000000, 0.939784198000000,
              0.946745562000000, 0.953706927000000, 0.960668291000000, 0.967629655000000, 0.974591020000000,
              0.981552384000000, 0.988513749000000, 0.995475113000000]
    u_ocv = [3.00077868000000, 3.14184953800000, 3.22649205300000, 3.28896629000000, 3.33934874000000, 3.37965469900000,
             3.41290711600000, 3.43709069100000, 3.45019012800000, 3.45925896900000, 3.46732016100000, 3.47235840600000,
             3.47739665100000, 3.48344254500000, 3.48747314100000, 3.49150373600000, 3.49654198100000, 3.50158022600000,
             3.50561082200000, 3.50964141800000, 3.51568731200000, 3.51871025900000, 3.52576380200000, 3.53080204700000,
             3.53684794100000, 3.54289383500000, 3.54793208000000, 3.55397797400000, 3.56002386800000, 3.56506211200000,
             3.57110800600000, 3.57513860200000, 3.58118449600000, 3.58420744300000, 3.58924568800000, 3.59327628400000,
             3.59529158200000, 3.59932217800000, 3.60133747600000, 3.60436042300000, 3.60738337000000, 3.61040631700000,
             3.61342926400000, 3.61645221100000, 3.61947515800000, 3.62149045600000, 3.62451340300000, 3.62652870100000,
             3.62955164800000, 3.63156694600000, 3.63458989300000, 3.63660519000000, 3.63962813700000, 3.64265108400000,
             3.64668168000000, 3.64970462700000, 3.65272757400000, 3.65474287200000, 3.65675817000000, 3.66078876600000,
             3.66381171300000, 3.66683466000000, 3.66985760700000, 3.67388820300000, 3.67791879900000, 3.67993409700000,
             3.68396469300000, 3.68799528900000, 3.69101823600000, 3.69504883200000, 3.69907942800000, 3.70311002400000,
             3.70814826800000, 3.71217886400000, 3.71620946000000, 3.72124770500000, 3.72527830100000, 3.73031654600000,
             3.73535479100000, 3.74140068500000, 3.74543128100000, 3.75046952600000, 3.75550777100000, 3.76155366500000,
             3.76759955900000, 3.77263780400000, 3.77767604900000, 3.78372194200000, 3.78976783600000, 3.79581373000000,
             3.80185962400000, 3.80790551800000, 3.81395141200000, 3.81999730600000, 3.82705084900000, 3.83309674300000,
             3.83914263700000, 3.84518853100000, 3.85224207300000, 3.85929561600000, 3.86634915900000, 3.87239505300000,
             3.87944859600000, 3.88750978800000, 3.89557098000000, 3.90161687400000, 3.90967806600000, 3.91673160900000,
             3.92277750300000, 3.93184634300000, 3.93789223700000, 3.94595342900000, 3.95401462100000, 3.96106816400000,
             3.96912935600000, 3.97618289900000, 3.98525174000000, 3.99230528300000, 4.00036647400000, 4.00641236800000,
             4.01548120900000, 4.02354240100000, 4.03361889100000, 4.03966478500000, 4.04873362600000, 4.05679481800000,
             4.06485601000000, 4.07392485000000, 4.08198604200000, 4.09206253200000, 4.09911607500000, 4.10616961800000,
             4.11020021400000, 4.11523845900000, 4.11826140600000, 4.12329965100000, 4.12733024700000, 4.13236849200000,
             4.13639908800000, 4.14042968300000, 4.14647557700000, 4.15050617300000, 4.15755971600000, 4.16562090800000]
    cell.ocv_func = interp1d(points, u_ocv, kind="linear")

    return cell


